# Copyright 2018 M. Riechert and D. Meyer. Licensed under the MIT License.

language: python
python: "3.6"

# Note: Do NOT use env:global: here as this is overridden by the API-triggered builds
#       from the WRF and WPS repos.

if: type = api

matrix:
  include:
    - os: linux
      dist: trusty
      sudo: required # Need sudo to install netcdf via apt as not whitelisted 
      env:
        - SYSTEM=cmake
        - BUILD_TYPE=Debug
        - CC=gcc
        - FC=gfortran
        - MODE=serial
        - GRIB1=0
        - GRIB2=1
        - NESTING=basic

    - os: linux
      dist: trusty
      sudo: required
      env:
        - SYSTEM=cmake
        - BUILD_TYPE=Debug
        - CC=gcc
        - FC=gfortran
        - MODE=dmpar
        - GRIB1=0
        - GRIB2=1
        - NESTING=basic

    - os: osx
      osx_image: xcode9.2 # https://github.com/travis-ci/travis-ci/issues/9640
      language: generic
      env:
        - SYSTEM=cmake
        - BUILD_TYPE=Debug
        - CC=gcc-8 # GNU via HomeBrew
        - FC=gfortran-8
        - MODE=serial
        - GRIB1=0
        - GRIB2=1
        - NESTING=basic

    - os: osx
      osx_image: xcode9.2 # https://github.com/travis-ci/travis-ci/issues/9640
      language: generic
      env:
        - SYSTEM=cmake
        - BUILD_TYPE=Debug
        - CC=gcc-8 # GNU via HomeBrew
        - FC=gfortran-8
        - MODE=dmpar
        - GRIB1=0
        - GRIB2=1
        - NESTING=basic

before_install:
  - PENDING=1 .ci/update-commit-status.sh
  - if [[ $MODE == dm* ]]; then export MPI_FLAG=--mpi ; fi
  - export DATA_BRANCH=$TRIGGER_REPO-$TRIGGER_BUILD_NUMBER-$TRAVIS_OS_NAME-$MODE
  - echo "Downloading reference data from branch $DATA_BRANCH of $DATA_REPO"
  - git clone --depth=1 --branch=$DATA_BRANCH https://github.com/$DATA_REPO.git output_make
  - ls -lR output_make
  - git clone --depth=100 --no-single-branch https://github.com/$WRF_REPO.git WRF
  - git clone --depth=100 --no-single-branch https://github.com/$WPS_REPO.git WPS
  - cd WRF
  - git checkout $WRF_COMMIT
  - cd ../WPS
  - git checkout $WPS_COMMIT
  - cd ..

install:
  - cd WRF
  - .ci/travis/setup-dependencies.sh
  - .ci/travis/install-wrf.sh
  - cd ../WPS
  - .ci/travis/install-wps.sh
  - cd ..
  - .ci/travis/install-python3.sh
  - pip3 install -r requirements.txt

before_script:
  - python3 wats/main.py run --mode $WATS_MODE --wrf-dir WRF/build/install --wps-dir WPS/build/install --wps-case-output-dir output_make/wps/00 --work-dir work_cmake $MPI_FLAG
  - ls -lR work_cmake/output

script:
  - python3 wats/main.py diff --mode $WATS_MODE output_make work_cmake/output
  
after_script:
- .ci/update-commit-status.sh
